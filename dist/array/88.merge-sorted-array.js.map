{"version":3,"sources":["../../src/array/88.merge-sorted-array.js"],"names":["merge","nums1","m","nums2","n","p1","p2","result","curr1","curr2","push","i","length"],"mappings":";;AAAA;;;;;;AAMA;;;;;;;AAOA,IAAIA,KAAK,GAAG,SAARA,KAAQ,CAASC,KAAT,EAAgBC,CAAhB,EAAmBC,KAAnB,EAA0BC,CAA1B,EAA6B;AACvC,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAMC,MAAM,GAAG,EAAf;;AAEA,SAAOF,EAAE,GAAGH,CAAL,IAAUI,EAAE,GAAGF,CAAtB,EAAyB;AACvB,QAAMI,KAAK,GAAGP,KAAK,CAACI,EAAD,CAAnB;AACA,QAAMI,KAAK,GAAGN,KAAK,CAACG,EAAD,CAAnB;;AAEA,QAAIE,KAAK,GAAGC,KAAZ,EAAmB;AACjB,UAAIJ,EAAE,GAAGH,CAAT,EAAYK,MAAM,CAACG,IAAP,CAAYF,KAAZ;AACZH,MAAAA,EAAE;AACH,KAHD,MAGO,IAAIG,KAAK,GAAGC,KAAZ,EAAmB;AACxB,UAAIH,EAAE,GAAGF,CAAT,EAAYG,MAAM,CAACG,IAAP,CAAYD,KAAZ;AACZH,MAAAA,EAAE;AACH,KAHM,MAGA;AACL,UAAID,EAAE,GAAGH,CAAT,EAAYK,MAAM,CAACG,IAAP,CAAYF,KAAZ;AACZ,UAAIF,EAAE,GAAGF,CAAT,EAAYG,MAAM,CAACG,IAAP,CAAYD,KAAZ;AACZJ,MAAAA,EAAE;AACFC,MAAAA,EAAE;AACH;AACF;;AAED,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCV,IAAAA,KAAK,CAACU,CAAD,CAAL,GAAWJ,MAAM,CAACI,CAAD,CAAjB;AACD;AACF,CA1BD;AA4BA;;;;;;;;AAQA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAOA;;;;;;AAQA;AACA","sourcesContent":["/**\n * Easy\n *\n * Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.\n */\n\n/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */\nvar merge = function(nums1, m, nums2, n) {\n  let p1 = 0;\n  let p2 = 0;\n  const result = [];\n\n  while (p1 < m || p2 < n) {\n    const curr1 = nums1[p1];\n    const curr2 = nums2[p2];\n\n    if (curr1 < curr2) {\n      if (p1 < m) result.push(curr1);\n      p1++;\n    } else if (curr1 > curr2) {\n      if (p2 < n) result.push(curr2);\n      p2++;\n    } else {\n      if (p1 < m) result.push(curr1);\n      if (p2 < n) result.push(curr2);\n      p1++;\n      p2++;\n    }\n  }\n\n  for (let i = 0; i < result.length; i++) {\n    nums1[i] = result[i];\n  }\n};\n\n/**\n * Input:\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\nOutput: [1,2,2,3,5,6]\n */\n\n/**\n  * [1,2,3,0,0,0]\n    3\n    [2,5,6]\n    3\n  */\n\n/**\n * [1]\n    1\n    []\n    0\n */\n\n/**\n  * [2,0]\n    1\n    [1]\n    1\n  */\n\n/**\n   * [1,2,3,0,0,0]\n3\n[2,5,6]\n3\n   */\n\n\n// 解法二：arr.sort\n// 解法三：使用排序算法"],"file":"88.merge-sorted-array.js"}