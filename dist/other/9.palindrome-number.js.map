{"version":3,"sources":["../../src/other/9.palindrome-number.js"],"names":["isPalindrome","x","arr","toString","split","length","end","start","res","console","log"],"mappings":";;AAAA;;;;;AAKA;;;;;AAKA,IAAIA,YAAY,GAAG,SAAfA,YAAe,CAASC,CAAT,EAAY;AAC3B,MAAIC,GAAG,GAAGD,CAAC,CAACE,QAAF,GAAaC,KAAb,CAAmB,EAAnB,CAAV;AACA,MAAGF,GAAG,CAACG,MAAJ,IAAc,CAAjB,EAAoB,OAAO,IAAP;AACpB,MAAIC,GAAG,GAAGJ,GAAG,CAACG,MAAJ,GAAa,CAAvB;AACA,MAAIE,KAAK,GAAG,CAAZ;;AACA,OAAIA,KAAJ,EAAWA,KAAK,GAACD,GAAjB,EAAsBC,KAAK,EAA3B,EAA8B;AAC1B,QAAGL,GAAG,CAACK,KAAD,CAAH,KAAeL,GAAG,CAACI,GAAD,CAArB,EAA2B;AACvB,aAAO,KAAP;AACH;;AACDA,IAAAA,GAAG;AACN;;AACD,SAAO,IAAP;AACH,CAZD;;AAcA,IAAIE,GAAG,GAAGR,YAAY,CAAC,GAAD,CAAtB;AACAS,OAAO,CAACC,GAAR,mCAAuCF,GAAvC","sourcesContent":["/**\n * Determine whether an integer is a palindrome. \n * An integer is a palindrome when it reads the same backward as forward.\n */\n\n/**\n * 头尾指针\n * @param {number} x\n * @return {boolean}\n */\nvar isPalindrome = function(x) {\n    var arr = x.toString().split('');\n    if(arr.length <= 1) return true;\n    var end = arr.length - 1;\n    var start = 0;\n    for(start; start<end; start++){\n        if(arr[start] !== arr[end]){\n            return false;\n        }\n        end--;\n    }\n    return true;\n};\n\nvar res = isPalindrome(121);\nconsole.log(`Expected: true, Output: ${res}`);"],"file":"9.palindrome-number.js"}